# This file was automagically generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN =
PROJECT = lpc11u35
OBJECTS = ./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/TOOLCHAIN_GCC_ARM/startup_LPC11xx.o ./hal/common/error.o ./hal/common/gpio.o ./hal/common/wait_api.o ./hal/common/rtc_time.o ./hal/common/critical.o ./hal/common/pinmap_common.o ./hal/common/semihost_api.o ./hal/common/us_ticker_api.o ./hal/common/assert.o ./hal/common/ticker_api.o ./hal/common/mbed_interface.o ./hal/common/lp_ticker_api.o ./hal/common/board.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/pwmout_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/gpio_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/gpio_irq_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/us_ticker.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/port_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/sleep.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/i2c_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/serial_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/pinmap.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/analogin_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/spi_api.o ./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/TARGET_LPC11U24_401/PeripheralPins.o ./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/cmsis_nvic.o ./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/system_LPC11Uxx.o ./main.o ./hal/common/TimerEvent.o ./hal/common/BusInOut.o ./hal/common/retarget.o ./hal/common/SerialBase.o ./hal/common/BusOut.o ./hal/common/SPISlave.o ./hal/common/InterruptIn.o ./hal/common/I2C.o ./hal/common/Timeout.o ./hal/common/I2CSlave.o ./hal/common/Serial.o ./hal/common/Ticker.o ./hal/common/FileSystemLike.o ./hal/common/BusIn.o ./hal/common/InterruptManager.o ./hal/common/FilePath.o ./hal/common/Ethernet.o ./hal/common/Timer.o ./hal/common/FileLike.o ./hal/common/LocalFileSystem.o ./hal/common/SPI.o ./hal/common/RawSerial.o ./hal/common/CallChain.o ./hal/common/Stream.o ./hal/common/FileBase.o ./hal/common/CAN.o
OBJECTS += pixels_circle.o color_pixels/color_pixels.o buffered_serial/BufferedSerial.o buffered_serial/MyBuffer.o
SYS_OBJECTS =
INCLUDE_PATHS = -I. -I./hal -I./hal/hal -I./hal/api -I./hal/common -I./hal/targets -I./hal/targets/hal -I./hal/targets/hal/TARGET_NXP -I./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX -I./hal/targets/hal/TARGET_NXP/TARGET_LPC11UXX/TARGET_LPC11U24_401 -I./hal/targets/cmsis -I./hal/targets/cmsis/TARGET_NXP -I./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX -I./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/TOOLCHAIN_GCC_ARM -I./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/TOOLCHAIN_GCC_ARM/TARGET_LPC11U24_401 -I./usb -I./usb/USBAudio -I./usb/USBDevice -I./usb/TARGET_LPC11U24 -I./usb/TARGET_LPC11U24/TOOLCHAIN_GCC_ARM -I./usb/USBSerial -I./usb/USBMSD -I./usb/USBMIDI -I./usb/USBHID
INCLUDE_PATHS += -I./color_pixels -I./buffered_serial
LIBRARY_PATHS = -L./usb/TARGET_LPC11U24/TOOLCHAIN_GCC_ARM
LIBRARIES = -lUSBDevice
LINKER_SCRIPT = ./hal/targets/cmsis/TARGET_NXP/TARGET_LPC11UXX/TOOLCHAIN_GCC_ARM/TARGET_LPC11U24_401/LPC11U24.ld

###############################################################################
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size


CPU = -mcpu=cortex-m0 -mthumb
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -D__CORTEX_M0 -DTARGET_LPC11UXX -DTOOLCHAIN_GCC -DTARGET_LPC11U24_401 -DTARGET_CORTEX_M -DMBED_BUILD_TIMESTAMP=1464662596.07 -DTARGET_LIKE_MBED -DTARGET_NXP -D__MBED__=1 -DTOOLCHAIN_GCC_ARM -DTARGET_M0 -DARM_MATH_CM0 -DTARGET_LPC11U24 -DTARGET_LIKE_CORTEX_M0

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -Wl,--wrap,main -Wl,-Map=$(PROJECT).map,--cref
#LD_FLAGS += -u _printf_float -u _scanf_float
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

.PHONY: all clean lst size

all: $(PROJECT).bin size


clean:
	rm -f $(PROJECT).bin $(PROJECT).elf $(PROJECT).hex $(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.asm.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.s.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<
.S.o:
	$(CC) $(CPU) -c -x assembler-with-cpp -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 -fno-rtti $(INCLUDE_PATHS) -o $@ $<




$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ -Wl,--start-group $(LIBRARIES) $(LD_SYS_LIBS) -Wl,--end-group


$(PROJECT).bin: $(PROJECT).elf
	$(OBJCOPY) -O binary $< $@
	tools/lpcrc/lpcrc $(PROJECT).bin

$(PROJECT).hex: $(PROJECT).elf
	@$(OBJCOPY) -O ihex $< $@

$(PROJECT).lst: $(PROJECT).elf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(PROJECT).lst

size: $(PROJECT).elf
	$(SIZE) $(PROJECT).elf

flash: $(PROJECT).bin
	python tools/flash.py $(PROJECT).bin

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
